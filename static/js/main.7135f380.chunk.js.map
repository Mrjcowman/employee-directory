{"version":3,"sources":["Utils/Employee.js","Utils/EmployeeArray.js","Components/EmployeeCard.js","Components/EmployeeList.js","Components/SearchForm.js","Utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","name","email","login","phone","id","picture","this","fullName","first","last","EmployeeArray","employees","forEach","employee","push","pop","callback","map","asc","sort","empA","empB","query","filter","toLowerCase","includes","EmployeeCard","props","data","EmployeeList","employeesMap","employeeList","SearchForm","type","autocomplete","placeholder","onChange","BASEURL","search","queries","axios","get","join","getNumOfUsers","num","App","useState","myEmployees","setMyEmployees","sortByName","myEmployeeList","setMyEmployeeList","useEffect","API","then","res","results","catch","err","className","event","preventDefault","filterByName","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7135f380.chunk.js","sourcesContent":["export default class Employee {\r\n    constructor(name, email, login, phone, id, picture){\r\n        this.name    = name;\r\n        this.email   = email;\r\n        this.login   = login;\r\n        this.phone   = phone;\r\n        this.id      = id;\r\n        this.picture = picture;\r\n        this.fullName = name.first+\" \"+name.last;\r\n    }\r\n}\r\n","import './Employee';\r\nimport Employee from './Employee';\r\n\r\nexport default class EmployeeArray {\r\n    constructor(...employees){\r\n        this.employees = [];\r\n        employees.forEach(employee=>{\r\n            this.employees.push(new Employee(\r\n                employee.name,\r\n                employee.email,\r\n                employee.login,\r\n                employee.phone,\r\n                employee.id,\r\n                employee.picture\r\n            ));\r\n        })\r\n    }\r\n\r\n    setEmployees(employees){\r\n        this.employees = employees;\r\n    }\r\n\r\n    push(employee){\r\n        this.employees.push(employee);\r\n    }\r\n\r\n    pop(employee){\r\n        return this.employees.pop(employee);\r\n    }\r\n\r\n    map(callback){\r\n        return this.employees.map(callback);\r\n    }\r\n\r\n    // FIXME: look at more than just the first letter\r\n    // FIXME: sort by last name\r\n    sortByName(asc=true){\r\n        if(asc)\r\n            return this.employees.sort((empA,empB)=>{\r\n                return empA.name.last < empB.name.last? -1: 1;\r\n            });\r\n        else\r\n            return this.employees.sort((empA,empB)=>{\r\n                return empB.name.last < empA.name.last? -1: 1;\r\n            });\r\n    }\r\n\r\n    // TODO: convert to lowercase to ignore caps\r\n    filterByName(query){\r\n        return this.employees.filter(employee=>{\r\n            return employee.fullName.toLowerCase().includes(query.toLowerCase());\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\n\nfunction EmployeeCard(props) {\n    return (\n        <li>\n            <p>Name: {props.data.fullName}</p>\n        </li>\n    )\n}\n\nexport default EmployeeCard;\n","import React from 'react'\r\nimport EmployeeCard from './EmployeeCard'\r\n\r\nfunction EmployeeList(props) {\r\n    let employeesMap = props.employeeList.map(employee=>{\r\n        return <EmployeeCard data={employee} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>I'm a list of employees!</h2>\r\n            <ul>\r\n                {employeesMap}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeList\r\n","import React from 'react'\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form>\r\n            <h2>I'm a search form!</h2>\r\n            <input type=\"text\" autocomplete=\"off\" placeholder=\"Search by Name...\" name=\"query\" onChange={props.onChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm;\r\n","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?inc=name,email,login,phone,id,picture&\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: function(...queries) {\n    return axios.get(BASEURL + queries.join(\"&\"));\n  },\n\n  getNumOfUsers: function(num) {\n    return this.search(`results=${num}`);\n  }\n};\n","import React, {useEffect, useState} from 'react';\n\nimport EmployeeArray from './Utils/EmployeeArray';\nimport EmployeeList from './Components/EmployeeList';\nimport SearchForm from './Components/SearchForm';\nimport API from './Utils/API';\n\nfunction App() {\n\n  const [myEmployees, setMyEmployees] = useState(new EmployeeArray());\n  const [myEmployeeList, setMyEmployeeList] = useState(myEmployees.sortByName());\n\n  useEffect(() => {\n    API.getNumOfUsers(20).then(res=>{\n      setMyEmployees(new EmployeeArray(...res.data.results));\n    }).catch(err=>{\n      throw err;\n    })\n  \n  }, [])\n\n  useEffect(() => {\n    setMyEmployeeList(myEmployees.sortByName());\n  }, [myEmployees])\n\n  function searchEmployees(event) {\n    event.preventDefault();\n    setMyEmployeeList(myEmployees.filterByName(event.target.value));\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchForm onChange={searchEmployees} />\n      <EmployeeList employeeList={myEmployeeList}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}